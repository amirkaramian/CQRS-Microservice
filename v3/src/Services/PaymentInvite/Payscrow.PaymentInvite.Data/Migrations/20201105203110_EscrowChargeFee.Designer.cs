// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Payscrow.PaymentInvite.Data;

namespace Payscrow.PaymentInvite.Data.Migrations
{
    [DbContext(typeof(PaymentInviteDbContext))]
    [Migration("20201105203110_EscrowChargeFee")]
    partial class EscrowChargeFee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Payscrow.PaymentInvite.Domain.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Payscrow.PaymentInvite.Domain.Models.Invite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BuyerChargeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BuyerEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("BuyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SellerChargeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SellerVerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("TraderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerEmail");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SellerEmail");

                    b.HasIndex("SellerId");

                    b.HasIndex("TraderId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("Payscrow.PaymentInvite.Domain.Models.TradeItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InviteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InviteId");

                    b.ToTable("TradeItems");
                });

            modelBuilder.Entity("Payscrow.PaymentInvite.Domain.Models.Trader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdentityGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdentityGuid");

                    b.ToTable("Traders");
                });

            modelBuilder.Entity("Payscrow.PaymentInvite.Domain.Models.Invite", b =>
                {
                    b.HasOne("Payscrow.PaymentInvite.Domain.Models.Trader", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Payscrow.PaymentInvite.Domain.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Payscrow.PaymentInvite.Domain.Models.Trader", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.HasOne("Payscrow.PaymentInvite.Domain.Models.Trader", null)
                        .WithMany("Transactions")
                        .HasForeignKey("TraderId");

                    b.OwnsOne("Payscrow.PaymentInvite.Domain.ValueObjects.PhoneNumber", "BuyerPhone", b1 =>
                        {
                            b1.Property<Guid>("InviteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LocalNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InviteId");

                            b1.ToTable("Invites");

                            b1.WithOwner()
                                .HasForeignKey("InviteId");
                        });

                    b.OwnsOne("Payscrow.PaymentInvite.Domain.ValueObjects.PhoneNumber", "SellerPhone", b1 =>
                        {
                            b1.Property<Guid>("InviteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LocalNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InviteId");

                            b1.ToTable("Invites");

                            b1.WithOwner()
                                .HasForeignKey("InviteId");
                        });
                });

            modelBuilder.Entity("Payscrow.PaymentInvite.Domain.Models.TradeItem", b =>
                {
                    b.HasOne("Payscrow.PaymentInvite.Domain.Models.Invite", "Invite")
                        .WithMany("Items")
                        .HasForeignKey("InviteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Payscrow.PaymentInvite.Domain.Models.Trader", b =>
                {
                    b.OwnsOne("Payscrow.PaymentInvite.Domain.ValueObjects.Address", "ContactAddress", b1 =>
                        {
                            b1.Property<Guid>("TraderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TraderId");

                            b1.ToTable("Traders");

                            b1.WithOwner()
                                .HasForeignKey("TraderId");
                        });

                    b.OwnsOne("Payscrow.PaymentInvite.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("TraderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LocalNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TraderId");

                            b1.ToTable("Traders");

                            b1.WithOwner()
                                .HasForeignKey("TraderId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
